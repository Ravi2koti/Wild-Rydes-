name: Deploy WildRydes Application

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Build, Deploy, and Configure ALB on AWS ECS
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ca-central-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, Tag, and Push Image to ECR
        run: |
          docker build -t wildrydes-repo .
          docker tag wildrydes-repo:latest 387283381312.dkr.ecr.ca-central-1.amazonaws.com/wildrydes-repo:latest
          docker push 387283381312.dkr.ecr.ca-central-1.amazonaws.com/wildrydes-repo:latest

      - name: Update ECS Service with New Image
        run: |
          aws ecs update-service \
            --cluster wildrydes-cluster \
            --service wildrydes-task-service-r8n3gf0v \
            --force-new-deployment

      - name: Configure Load Balancer for ECS Service
        run: |
          echo "üîç Checking and configuring ALB for ECS..."

          CLUSTER="wildrydes-cluster"
          SERVICE="wildrydes-task-service-r8n3gf0v"
          TG_NAME="wildrydes-tg"
          ALB_NAME="wildrydes-alb"
          VPC_ID=$(aws ec2 describe-vpcs --filters Name=isDefault,Values=true --query "Vpcs[0].VpcId" --output text)
          SUBNETS=$(aws ec2 describe-subnets --filters "Name=vpc-id,Values=$VPC_ID" --query "Subnets[].SubnetId" --output text)
          
          # Create Security Group for ALB
          SG_ID=$(aws ec2 create-security-group --group-name wildrydes-alb-sg --description "ALB SG for WildRydes" --vpc-id $VPC_ID --query 'GroupId' --output text || true)
          aws ec2 authorize-security-group-ingress --group-id $SG_ID --protocol tcp --port 80 --cidr 0.0.0.0/0 || true

          # Create Target Group (if not
